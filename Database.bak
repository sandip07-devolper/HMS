CREATE TABLE UserMain (
    UserID INT PRIMARY KEY,
    Username NVARCHAR(50) NOT NULL,
    Password NVARCHAR(50) NOT NULL
);


-- Roles Table
CREATE TABLE Roles (
    RoleID INT PRIMARY KEY,
    RoleName NVARCHAR(50) -- Admin, Trainer, Accountant, Reception, etc.
);

-- Province Table
CREATE TABLE Province (
    ProvinceID INT PRIMARY KEY,
    ProvinceName NVARCHAR(100)
);

-- District Table
CREATE TABLE District (
    DistrictID SMALLINT PRIMARY KEY,
    ZoneID SMALLINT NOT NULL,
    DistrictName VARCHAR(50) NOT NULL,
    ProvinceID INT,
    DistrictName_Nep NVARCHAR(100),
    FOREIGN KEY (ProvinceID) REFERENCES Province(ProvinceID)
);

-- Source Table
CREATE TABLE Source (
    SourceID INT PRIMARY KEY,
    SourceName NVARCHAR(100) -- e.g., 'Online Form', 'Walk-in', 'Referral', etc.
);

-- Shift Table
CREATE TABLE Shift (
    ShiftID INT PRIMARY KEY,
    ShiftName NVARCHAR(50) NOT NULL -- e.g., Morning, Day, Evening
);

-- Students Table
CREATE TABLE Students (
    StudentID VARCHAR(20) PRIMARY KEY,
    FullName NVARCHAR(100) NOT NULL,
    Gender VARCHAR(10),
    DateOfBirth VARCHAR(20),
    PhoneNumber VARCHAR(15),
    Email VARCHAR(100),
    Address NVARCHAR(200),
    SourceID INT,
    SourceTable NVARCHAR(100),
    ShiftID INT,
	ImagePath NVARCHAR(255),
    FOREIGN KEY (SourceID) REFERENCES Source(SourceID),
    FOREIGN KEY (ShiftID) REFERENCES Shift(ShiftID)

);

-- Faculty Table
CREATE TABLE Faculty (
    FacultyID INT PRIMARY KEY,
    FacultyName VARCHAR(30),
    Status VARCHAR(5)
);

-- Courses Table
CREATE TABLE Courses (
    CourseID VARCHAR(10) PRIMARY KEY,
    CourseName NVARCHAR(100),
    Description NVARCHAR(255),
    DurationWeeks INT,
    Fee DECIMAL(10, 2)
);

-- Enrollments Table
CREATE TABLE Enrollments (
    EnrollmentID VARCHAR(20) PRIMARY KEY,
    StudentID VARCHAR(20),
    CourseID VARCHAR(10),
    EnrollmentDate DATE,
    CompletionDate DATE,
    Status VARCHAR(20), -- Enrolled, Completed, Dropped
    FOREIGN KEY (StudentID) REFERENCES Students(StudentID),
    FOREIGN KEY (CourseID) REFERENCES Courses(CourseID)
);

-- Billing Table
CREATE TABLE Billing (
    BillID VARCHAR(20) PRIMARY KEY,
    EnrollmentID VARCHAR(20),
    BillDate DATE,
    Amount DECIMAL(10,2),
    PaidAmount DECIMAL(10,2),
    DueAmount DECIMAL(10,2),
    PaymentStatus VARCHAR(20), -- Paid, Partial, Unpaid
    FOREIGN KEY (EnrollmentID) REFERENCES Enrollments(EnrollmentID)
);

-- Staff Table
CREATE TABLE Staff (
    StaffID VARCHAR(20) PRIMARY KEY,
    FullName NVARCHAR(100),
    Gender VARCHAR(10),
    Email VARCHAR(100),
    PhoneNumber VARCHAR(15),
    HireDate DATE,
    RoleID INT,
	UserID INT,
    Religion VARCHAR(30),

    PermanentProvinceID INT,
    PermanentDistrictID SMALLINT,
    PermanentMunicipality NVARCHAR(100),
    PermanentWardNo VARCHAR(5),
    PermanentTole NVARCHAR(100),

    TemporaryProvinceID INT,
    TemporaryDistrictID SMALLINT,
    TemporaryMunicipality NVARCHAR(100),
    TemporaryWardNo INT,
    TemporaryTole NVARCHAR(100),

    FOREIGN KEY (RoleID) REFERENCES Roles(RoleID),
	FOREIGN KEY (UserID) REFERENCES UserMain(UserID),
    FOREIGN KEY (PermanentProvinceID) REFERENCES Province(ProvinceID),
    FOREIGN KEY (PermanentDistrictID) REFERENCES District(DistrictID),
    FOREIGN KEY (TemporaryProvinceID) REFERENCES Province(ProvinceID),
    FOREIGN KEY (TemporaryDistrictID) REFERENCES District(DistrictID)
);

-- Course Assignments Table
CREATE TABLE CourseAssignments (
    AssignmentID VARCHAR(20) PRIMARY KEY,
    CourseID VARCHAR(10),
    StaffID VARCHAR(20),
    AssignedDate DATE,
    FOREIGN KEY (CourseID) REFERENCES Courses(CourseID),
    FOREIGN KEY (StaffID) REFERENCES Staff(StaffID)
	
);

-- Receipts Table
CREATE TABLE Receipts (
    ReceiptID VARCHAR(20) PRIMARY KEY,
    BillID VARCHAR(20),
    ReceiptDate DATE,
    PaidAmount DECIMAL(10,2),
    PaymentMethod VARCHAR(20), -- Cash, Bank, QR, etc.
    FOREIGN KEY (BillID) REFERENCES Billing(BillID)
);

-- Users Table
CREATE TABLE Users (
    UserID VARCHAR(20) PRIMARY KEY,
    Username NVARCHAR(100) UNIQUE NOT NULL,
    PasswordHash NVARCHAR(200) NOT NULL,
    RoleID INT,
    Email NVARCHAR(100),
    IsActive BIT DEFAULT 1,
    FOREIGN KEY (RoleID) REFERENCES Roles(RoleID)
);
